// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel Hiz_Buffer_Generation
#pragma enable_d3d11_debug_symbols

#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Common.hlsl"

int _SampleLevel;
float4 _InvBufferSize;

Texture2D<float> _SSR_HierarchicalDepth_RT;
RWTexture2D<float> _SSR_Target;
SAMPLER(sampler_point_clamp);

#if UNITY_REVERSED_Z
    # define MIN_DEPTH(l, r) max(l, r)
#else
    # define MIN_DEPTH(l, r) min(l, r)
#endif

[numthreads(8,8,1)]
void Hiz_Buffer_Generation(uint3 id : SV_DispatchThreadID)
{
    float2 uv = (id.xy + 0.5) * _InvBufferSize.xy;
    
    /*FinalMinZ = max( FinalMinZ, _PrevMipDepth.SampleLevel(sampler_PrevMipDepth, uv + int2( 1,  0) * _PrevCurr_Inverse_Size.zw, 0) );
    FinalMinZ = max( FinalMinZ, _PrevMipDepth.SampleLevel(sampler_PrevMipDepth, uv + int2(-1,  0) * _PrevCurr_Inverse_Size.zw, 0) );
    FinalMinZ = max( FinalMinZ, _PrevMipDepth.SampleLevel(sampler_PrevMipDepth, uv + int2( 0,  1) * _PrevCurr_Inverse_Size.zw, 0) );
    FinalMinZ = max( FinalMinZ, _PrevMipDepth.SampleLevel(sampler_PrevMipDepth, uv + int2( 0, -1) * _PrevCurr_Inverse_Size.zw, 0) );
    FinalMinZ = max( FinalMinZ, _PrevMipDepth.SampleLevel(sampler_PrevMipDepth, uv + int2( 1,  1) * _PrevCurr_Inverse_Size.zw, 0) );
    FinalMinZ = max( FinalMinZ, _PrevMipDepth.SampleLevel(sampler_PrevMipDepth, uv + int2(-1,  1) * _PrevCurr_Inverse_Size.zw, 0) );
    FinalMinZ = max( FinalMinZ, _PrevMipDepth.SampleLevel(sampler_PrevMipDepth, uv + int2( 1, -1) * _PrevCurr_Inverse_Size.zw, 0) );
    FinalMinZ = max( FinalMinZ, _PrevMipDepth.SampleLevel(sampler_PrevMipDepth, uv + int2(-1, -1) * _PrevCurr_Inverse_Size.zw, 0) );*/
    float FinalMinZ = _SSR_HierarchicalDepth_RT.SampleLevel(sampler_point_clamp, uv, _SampleLevel, int2(1, 1));
    FinalMinZ = MIN_DEPTH(FinalMinZ, _SSR_HierarchicalDepth_RT.SampleLevel(sampler_point_clamp, uv, _SampleLevel, int2(1, -1)));
    FinalMinZ = MIN_DEPTH(FinalMinZ, _SSR_HierarchicalDepth_RT.SampleLevel(sampler_point_clamp, uv, _SampleLevel, int2(-1, 1)));
    FinalMinZ = MIN_DEPTH(FinalMinZ, _SSR_HierarchicalDepth_RT.SampleLevel(sampler_point_clamp, uv, _SampleLevel, int2(-1, -1)));
    
    _SSR_Target[id.xy] = FinalMinZ;
}
